name: devops_snowflake_deploy

# Controls when the action will run. 
on:
  push:
    branches:
      - dev
      - staging
      - main
    paths:
      - 'migrations/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    env:
      SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      SF_USERNAME: ${{ secrets.SF_USERNAME }}
      SF_ROLE: ${{ secrets.SF_ROLE }}
      SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
      SF_DATABASE: ${{ secrets.SF_DATABASE }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}


    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Set branch specific environment variables
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "TARGET_DB=DKU_DEMO_PROD" >> $GITHUB_ENV
            echo "TARGET_SCHEMA=KAGGLE_DATASETS" >> $GITHUB_ENV
            echo "SCHEMACHANGE_HISTORY_NAME=PROD_CHANGE_HISTORY" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            echo "TARGET_DB=DKU_DEMO_DEV" >> $GITHUB_ENV
            echo "TARGET_SCHEMA=KAGGLE_DATASETS" >> $GITHUB_ENV
            echo "SCHEMACHANGE_HISTORY_NAME=DEV_CHANGE_HISTORY" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            echo "TARGET_DB=DKU_DEMO_STAGING" >> $GITHUB_ENV
            echo "TARGET_SCHEMA=KAGGLE_DATASETS" >> $GITHUB_ENV
            echo "SCHEMACHANGE_HISTORY_NAME=STAGING_CHANGE_HISTORY" >> $GITHUB_ENV
          fi

      - name: Create vars JSON
        id: create_vars_json
        env:
          TARGET_DB_NAME: ${{ env.TARGET_DB }}
          TARGET_SCHEMA_NAME: ${{ env.TARGET_SCHEMA }}
        run: |
          echo "::set-output name=vars_json::'{\"sf_warehouse\":\"$SF_WAREHOUSE\", \"db_name\":\"$TARGET_DB_NAME\", \"schema_name\":\"$TARGET_SCHEMA_NAME\"}'"

      - name: Run schemachange
        env: 
          SCHEMACHANGE_TABLE: ${{ env.SCHEMACHANGE_HISTORY_NAME }}
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange
          
          echo "Step 2: Running schemachange"
          schemachange -f $GITHUB_WORKSPACE/migrations -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.$SCHEMACHANGE_TABLE --create-change-history-table --vars ${{ steps.create_vars_json.outputs.vars_json }}
